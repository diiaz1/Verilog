`timescale 1ns/1ns

module ECC_tb();
reg R_W_tb;
reg [8:1] m_tb;
wire [12:1] x_tb;
integer i;

ECC inst_ECC (.R_W(R_W_tb), .m(m_tb), .x(x_tb));

	//Trabalhando com todas as combinações possíveis -> 256 entradas diferentes 
	
	//default
	initial
		begin
			R_W = 1;
		end
	
	initial
	  begin
	    $display("Operação de leitura -> mini teste com 16 combinações");
	    $display("\tTempo \tm \tx[12] \tx[11] \tx[10] \tx[9] \tx[8] \tx[7] \tx[6] \tx[5] \tx[4] \tx[3] \tx[2] \tx[1]");
	    $monitor("\t%t \t%b  \t%b \t%b \t%b \t%b \t%b \t%b \t%b \t%b \t%b \t%b \t%b \t%b",
	             $time, m_tb, 
	             x_tb[12], x_tb[11], x_tb[10], x_tb[9], x_tb[8], x_tb[7], x_tb[6], x_tb[5], x_tb[4], x_tb[3], x_tb[2], x_tb[1]);
	    
	    for (i = 0; i < 16; i = i + 1)
	      begin
	        m_tb = i;
	        #100;
	      end
	      
	    R_W = 0;
	    $display("Operação de escrita -> teste completo p/ as 256 combinações possíveis de entrada");
	    $display("\tTempo \tm \tx[12] \tx[11] \tx[10] \tx[9] \tx[8] \tx[7] \tx[6] \tx[5] \tx[4] \tx[3] \tx[2] \tx[1]");
	    for (i = 0; i < 256; i = i + 1)
	      begin
	        m_tb = i;
	        #100;
	      end
	   
	   $stop;
	   end

endmodule
